<?php

namespace App\Modules\AdminAPI\Controllers;

use App\Models\{model};
use System\Controllers\Controller;
use System\Helpers\DataTable;

/**
 * @route admin-api/{permalink}
 */
class {controller} extends Controller {

    /**
     * @route list
     */
    public function list()
    {
        $data = new DataTable(new {model}());
        $data->searchable({array_columns});
        return json($data->get());
    }

    /**
     * @route create
     */
    public function create()
    {
        try {
            if(request_is_post()) {
                validate_required({array_no_pk_columns});

                $row = new {model}();
                {model_setter}
                $row->save();

                return json(['message'=>'The {module} has been added!']);
            } else {
                throw new \Exception("Method is not allowed!");
            }


        } catch (\Exception $e) {
            http_response_code(400);
            return json(['message'=>$e->getMessage()]);
        }
    }

    /**
     * @route read
     */
    public function read()
    {
        try {
            if(request_is_post()) {
                validate_required(['{primary_key}']);

                $row = {model}::findById(request_int('{primary_key}'));
                $data = [];
                {data_model_assign}

                return json(['message'=>'success','data'=>$data]);
            } else {
                throw new \Exception("Method is not allowed!");
            }


        } catch (\Exception $e) {
            http_response_code(400);
            return json(['message'=>$e->getMessage()]);
        }
    }

    /**
     * @route update
     */
    public function update()
    {
        try {
            if(request_is_post()) {
                validate_required({array_columns});

                $row = {model}::findById(request_int('{primary_key}'));
                {model_setter}
                $row->save();

                return json(['message'=>'The {module} has been saved!']);
            } else {
                throw new \Exception("Method is not allowed!");
            }
        } catch (\Exception $e) {
            http_response_code(400);
            return json(['message'=>$e->getMessage()]);
        }
    }

    /**
     * @route delete
     */
    public function delete()
    {
        try {
            if(request_is_post()) {
                validate_required(['{primary_key}']);

                {model}::delete(request_int('{primary_key}'));

                return json(['message'=>'The {module} has been deleted!']);
            } else {
                throw new \Exception("Method is not allowed!");
            }


        } catch (\Exception $e) {
            http_response_code(400);
            return json(['message'=>$e->getMessage()]);
        }
    }
}